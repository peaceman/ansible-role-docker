---
# https://p1ngouin.com/posts/how-to-manage-iptables-rules-with-ufw-and-docker
# You should install Docker before this rule.
- name: configure ufw before.init to remove existing rules
  blockinfile:
    path: /etc/ufw/before.init
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    insertafter: stop\)
    block: |
      iptables -F DOCKER-USER || true
      iptables -A DOCKER-USER -j RETURN || true
      iptables -X ufw-user-input || true

- name: chmod /etc/ufw/before.init
  file:
    path: /etc/ufw/before.init
    state: touch
    mode: "a+x"

- name: configure ufw to work with DOCKER-USER chain name
  blockinfile:
    path: /etc/ufw/after.rules
    marker: "# {mark} ANSIBLE MANAGED BLOCK (docker-user)"
    block: |
      *filter
      :DOCKER-USER - [0:0]
      :ufw-user-input - [0:0]
      :ufw-after-logging-forward - [0:0]

      -A DOCKER-USER -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
      -A DOCKER-USER -m conntrack --ctstate INVALID -j DROP
      -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j ufw-user-input
      -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j ufw-after-logging-forward
      -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j DROP

      COMMIT

- name: Restart UFW
  systemd:
    name: ufw
    state: restarted
    enabled: true

- name: UFW Allow network communication between docker containers and the host
  include_role:
    name: weareinteractive.ufw
  vars:
    ufw_reset: no
    ufw_rules:
      - { to_ip: '172.16.0.0/12', rule: allow }
      - { to_ip: '192.168.0.0/16', rule: allow }
      - { to_ip: '10.0.0.0/8', rule: allow }
      - { from_ip: '172.16.0.0/12', rule: allow }
      - { from_ip: '192.168.0.0/16', rule: allow }
      - { from_ip: '10.0.0.0/8', rule: allow }
